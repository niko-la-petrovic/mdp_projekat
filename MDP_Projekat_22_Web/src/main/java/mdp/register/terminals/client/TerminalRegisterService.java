
package mdp.register.terminals.client;

import java.math.BigInteger;
import java.util.List;
import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 4.0.0-M4
 * Generated source version: 3.0
 * 
 */
@WebService(name = "TerminalRegisterService", targetNamespace = "http://terminals.register.mdp")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface TerminalRegisterService {


    /**
     * 
     * @param id
     * @throws TerminalNotFoundException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "deleteTerminal", targetNamespace = "http://terminals.register.mdp", className = "mdp.register.terminals.client.DeleteTerminal")
    @ResponseWrapper(localName = "deleteTerminalResponse", targetNamespace = "http://terminals.register.mdp", className = "mdp.register.terminals.client.DeleteTerminalResponse")
    public void deleteTerminal(
        @WebParam(name = "id", targetNamespace = "http://terminals.register.mdp")
        BigInteger id)
        throws TerminalNotFoundException_Exception
    ;

    /**
     * 
     * @param terminalName
     * @param isCustomsStep
     * @param passageId
     * @return
     *     returns mdp.register.terminals.client.GetTerminalDto
     * @throws TerminalNotFoundException_Exception
     */
    @WebMethod
    @WebResult(name = "getTerminalReturn", targetNamespace = "http://terminals.register.mdp")
    @RequestWrapper(localName = "getTerminal", targetNamespace = "http://terminals.register.mdp", className = "mdp.register.terminals.client.GetTerminal")
    @ResponseWrapper(localName = "getTerminalResponse", targetNamespace = "http://terminals.register.mdp", className = "mdp.register.terminals.client.GetTerminalResponse")
    public GetTerminalDto getTerminal(
        @WebParam(name = "passageId", targetNamespace = "http://terminals.register.mdp")
        BigInteger passageId,
        @WebParam(name = "isCustomsStep", targetNamespace = "http://terminals.register.mdp")
        boolean isCustomsStep,
        @WebParam(name = "terminalName", targetNamespace = "http://terminals.register.mdp")
        String terminalName)
        throws TerminalNotFoundException_Exception
    ;

    /**
     * 
     * @return
     *     returns java.util.List<mdp.register.terminals.client.GetTerminalDto>
     */
    @WebMethod
    @WebResult(name = "getTerminalsReturn", targetNamespace = "http://terminals.register.mdp")
    @RequestWrapper(localName = "getTerminals", targetNamespace = "http://terminals.register.mdp", className = "mdp.register.terminals.client.GetTerminals")
    @ResponseWrapper(localName = "getTerminalsResponse", targetNamespace = "http://terminals.register.mdp", className = "mdp.register.terminals.client.GetTerminalsResponse")
    public List<GetTerminalDto> getTerminals();

    /**
     * 
     * @param dto
     * @return
     *     returns mdp.register.terminals.client.GetTerminalDto
     */
    @WebMethod
    @WebResult(name = "createTerminalReturn", targetNamespace = "http://terminals.register.mdp")
    @RequestWrapper(localName = "createTerminal", targetNamespace = "http://terminals.register.mdp", className = "mdp.register.terminals.client.CreateTerminal")
    @ResponseWrapper(localName = "createTerminalResponse", targetNamespace = "http://terminals.register.mdp", className = "mdp.register.terminals.client.CreateTerminalResponse")
    public GetTerminalDto createTerminal(
        @WebParam(name = "dto", targetNamespace = "http://terminals.register.mdp")
        CreateTerminalDto dto);

    /**
     * 
     * @param dto
     * @return
     *     returns mdp.register.terminals.client.GetTerminalDto
     * @throws TerminalNotFoundException_Exception
     */
    @WebMethod
    @WebResult(name = "searchTerminalReturn", targetNamespace = "http://terminals.register.mdp")
    @RequestWrapper(localName = "searchTerminal", targetNamespace = "http://terminals.register.mdp", className = "mdp.register.terminals.client.SearchTerminal")
    @ResponseWrapper(localName = "searchTerminalResponse", targetNamespace = "http://terminals.register.mdp", className = "mdp.register.terminals.client.SearchTerminalResponse")
    public GetTerminalDto searchTerminal(
        @WebParam(name = "dto", targetNamespace = "http://terminals.register.mdp")
        SearchTerminalDto dto)
        throws TerminalNotFoundException_Exception
    ;

    /**
     * 
     * @param dto
     * @return
     *     returns mdp.register.terminals.client.GetTerminalDto
     * @throws TerminalNotFoundException_Exception
     */
    @WebMethod
    @WebResult(name = "updateTerminalReturn", targetNamespace = "http://terminals.register.mdp")
    @RequestWrapper(localName = "updateTerminal", targetNamespace = "http://terminals.register.mdp", className = "mdp.register.terminals.client.UpdateTerminal")
    @ResponseWrapper(localName = "updateTerminalResponse", targetNamespace = "http://terminals.register.mdp", className = "mdp.register.terminals.client.UpdateTerminalResponse")
    public GetTerminalDto updateTerminal(
        @WebParam(name = "dto", targetNamespace = "http://terminals.register.mdp")
        UpdateTerminalDto dto)
        throws TerminalNotFoundException_Exception
    ;

    /**
     * 
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "getSerializedCountReturn", targetNamespace = "http://terminals.register.mdp")
    @RequestWrapper(localName = "getSerializedCount", targetNamespace = "http://terminals.register.mdp", className = "mdp.register.terminals.client.GetSerializedCount")
    @ResponseWrapper(localName = "getSerializedCountResponse", targetNamespace = "http://terminals.register.mdp", className = "mdp.register.terminals.client.GetSerializedCountResponse")
    public int getSerializedCount();

    /**
     * 
     * @param serializedCount
     */
    @WebMethod
    @RequestWrapper(localName = "setSerializedCount", targetNamespace = "http://terminals.register.mdp", className = "mdp.register.terminals.client.SetSerializedCount")
    @ResponseWrapper(localName = "setSerializedCountResponse", targetNamespace = "http://terminals.register.mdp", className = "mdp.register.terminals.client.SetSerializedCountResponse")
    public void setSerializedCount(
        @WebParam(name = "serializedCount", targetNamespace = "http://terminals.register.mdp")
        int serializedCount);

}
